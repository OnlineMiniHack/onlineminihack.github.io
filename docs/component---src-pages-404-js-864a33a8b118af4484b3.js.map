{"version":3,"sources":["webpack:///./node_modules/nanoid/index.browser.js","webpack:///./src/data/data.js","webpack:///./src/pages/404.js"],"names":["nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","headData","title","lang","description","aboutData","img","paragraphOne","paragraphTwo","paragraphThree","resume","projectsData","info","info2","url","repo","joinData","cta","meetup","footerData","networks","name","githubButtons","isEnabled","charSet","content","className","bottom","duration","delay","distance","role","aria-label","to"],"mappings":"ySAmBA,IA6CIA,EAAS,WAKX,IAJA,IAAIC,EAAOC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAE3CA,KAAQ,CAMb,IAAIS,EAAqB,GAAdJ,EAAML,GAIfI,GAFEK,EAAO,GAEHA,EAAKC,SAAS,IACXD,EAAO,IAETA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAIV,OAAOL,GCvFIQ,EAAW,CACtBC,MAAO,GACPC,KAAM,GACNC,YAAa,IAIFC,EAAY,CACvBC,IAAK,sBACLC,aAAc,GACdC,aAAc,GACdC,eAAgB,GAChBC,OAAQ,yCAIGC,EAAe,CAC1B,CACElB,GAAIL,IACJkB,IAAK,aACLJ,MAAO,kBACPU,KAAM,iIACNC,MAAO,GACPC,IAAK,GACLC,KAAM,gEAER,CACEtB,GAAIL,IACJkB,IAAK,cACLJ,MAAO,iCACPU,KAAM,4DACNC,MAAO,GACPC,IAAK,GACLC,KAAM,gEAER,CACEtB,GAAIL,IACJkB,IAAK,cACLJ,MAAO,kBACPU,KAAM,gEACNC,MAAO,GACPC,IAAK,GACLC,KAAM,gEAER,CACEtB,GAAIL,IACJkB,IAAK,UACLJ,MAAO,qBACPU,KAAM,+OACNC,MAAO,GACPC,IAAK,GACLC,KAAM,iEAKGC,EAAW,CACtBC,IAAK,iBACLC,OAAQ,qCAIGC,EAAa,CACxBC,SAAU,CACR,CACE3B,GAAIL,IACJiC,KAAM,UACNP,IAAK,sCAEP,CACErB,GAAIL,IACJiC,KAAM,WACNP,IAAK,2CAEP,CACErB,GAAIL,IACJiC,KAAM,SACNP,IAAK,uCAMEQ,EAAgB,CAC3BC,WAAW,I,kCCvFb,2HAUe,qBAAO,IACZpB,EAASF,IAATE,KAER,OACE,oCACE,kBAAC,IAAD,KACE,0BAAMqB,QAAQ,UACd,iDACA,0BAAMrB,KAAMA,GAAQ,OACpB,0BAAMkB,KAAK,cAAcI,QAAQ,oBAEnC,6BAAShC,GAAG,OAAOiC,UAAU,aAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,QAAM,EAACC,SAAU,IAAMC,MAAO,IAAKC,SAAS,QAChD,wBAAIJ,UAAU,0BAAd,kCACkC,IAChC,0BAAMK,KAAK,MAAMC,aAAW,SAA5B,QAKJ,kBAAC,IAAD,CAAML,QAAM,EAACC,SAAU,IAAMC,MAAO,IAAMC,SAAS,QACjD,uBAAGJ,UAAU,mCACX,kBAAC,OAAD,CAAMA,UAAU,wBAAwBO,GAAG,KAA3C","file":"component---src-pages-404-js-864a33a8b118af4484b3.js","sourcesContent":["// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\nimport { urlAlphabet } from './url-alphabet/index.js';\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative' && typeof crypto === 'undefined') {\n    throw new Error('React Native does not have a built-in secure random generator. ' + 'If you donâ€™t need unpredictable IDs use `nanoid/non-secure`. ' + 'For secure IDs, import `react-native-get-random-values` ' + 'before Nano ID. If you use Expo, install `expo-random` ' + 'and use `nanoid/async`.');\n  }\n\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error('Import file with `if (!window.crypto) window.crypto = window.msCrypto`' + ' before importing Nano ID to fix IE 11 support');\n  }\n\n  if (typeof crypto === 'undefined') {\n    throw new Error('Your browser does not have secure random generator. ' + 'If you donâ€™t need unpredictable IDs, you can use nanoid/non-secure.');\n  }\n}\n\nvar random = function random(bytes) {\n  return crypto.getRandomValues(new Uint8Array(bytes));\n};\n\nvar customRandom = function customRandom(alphabet, size, getRandom) {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1; // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n\n  var step = -~(1.6 * mask * size / alphabet.length);\n  return function () {\n    var id = '';\n\n    while (true) {\n      var bytes = getRandom(step); // A compact alternative for `for (var i = 0; i < step; i++)`.\n\n      var j = step;\n\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || '';\n        if (id.length === size) return id;\n      }\n    }\n  };\n};\n\nvar customAlphabet = function customAlphabet(alphabet, size) {\n  return customRandom(alphabet, size, random);\n};\n\nvar nanoid = function nanoid() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n  var id = '';\n  var bytes = crypto.getRandomValues(new Uint8Array(size)); // A compact alternative for `for (var i = 0; i < step; i++)`.\n\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    var byte = bytes[size] & 63;\n\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36);\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase();\n    } else if (byte < 63) {\n      id += '_';\n    } else {\n      id += '-';\n    }\n  }\n\n  return id;\n};\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random };","import { nanoid } from 'nanoid';\n\n// HEAD DATA\nexport const headData = {\n  title: '', // e.g: 'Name | Developer'\n  lang: '', // e.g: en, es, fr, jp\n  description: '', // e.g: Welcome to my website\n};\n\n// ABOUT DATA\nexport const aboutData = {\n  img: 'MiniHackGraphic.jpg',\n  paragraphOne: '',\n  paragraphTwo: '',\n  paragraphThree: '',\n  resume: 'https://www.resumemaker.online/es.php', // if no resume, the button will not show up\n};\n\n// PROJECTS DATA\nexport const projectsData = [\n  {\n    id: nanoid(),\n    img: 'jigsaw.jpg',\n    title: 'Hack 1 - Jigsaw',\n    info: 'You are provided with 6 Jigsaw pieces.  The brief for MiniHack 1 is to create something that uses at least one of these images',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/OnlineMiniHack/minihack/tree/master/hack1',\n  },\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'Hack 2 - Game with no Graphics',\n    info: 'The task for Hack 2 is to create a game with no graphics.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/OnlineMiniHack/minihack/tree/master/hack2',\n  },\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'Hack 3 - Advent',\n    info: 'The aim of this hack was to create an advent to a given date.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/OnlineMiniHack/minihack/tree/master/hack3', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'iot.png',\n    title: 'Hack 4 - Locked In',\n    info: 'You\\'re part of a crack team of spies, who are breaking a high value asset out of prison. Build something that, based on a real world (or simulated real world event) event, performs an action that will communicate with the outside world.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/OnlineMiniHack/minihack/tree/master/hack4', // if no repo, the button will not show up\n  },\n];\n\n// Join MiniHack DATA\nexport const joinData = {\n  cta: 'Join MiniHack?',  \n  meetup: 'https://www.meetup.com/mini-hack/'\n};\n\n// FOOTER DATA\nexport const footerData = {\n  networks: [\n    {\n      id: nanoid(),\n      name: 'twitter',\n      url: 'https://twitter.com/OnlineMiniHack',\n    },\n    {\n      id: nanoid(),\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/pcmichaels/',\n    },\n    {\n      id: nanoid(),\n      name: 'github',\n      url: 'https://github.com/OnlineMiniHack',\n    },\n  ],\n};\n\n// Github start/fork buttons\nexport const githubButtons = {\n  isEnabled: true, // set to false to disable the GitHub stars/fork buttons\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'react-bootstrap';\nimport Fade from 'react-reveal/Fade';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { headData } from '../data/data';\nimport '../style/main.scss';\n\nexport default () => {\n  const { lang } = headData;\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Page not found</title>\n        <html lang={lang || 'en'} />\n        <meta name=\"description\" content=\"Page not found\" />\n      </Helmet>\n      <section id=\"hero\" className=\"jumbotron\">\n        <Container>\n          <Fade bottom duration={1000} delay={500} distance=\"30px\">\n            <h1 className=\"hero-title text-center\">\n              Sorry, this path does not exist{' '}\n              <span role=\"img\" aria-label=\"emoji\">\n                ðŸ˜ž\n              </span>\n            </h1>\n          </Fade>\n          <Fade bottom duration={1000} delay={1000} distance=\"30px\">\n            <p className=\"hero-cta justify-content-center\">\n              <Link className=\"cta-btn cta-btn--hero\" to=\"/\">\n                Go back\n              </Link>\n            </p>\n          </Fade>\n        </Container>\n      </section>\n    </>\n  );\n};\n"],"sourceRoot":""}